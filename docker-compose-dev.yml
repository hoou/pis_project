version: '3.1'

services:

  api:
    container_name: api
    build:
      context: services/api
      dockerfile: Dockerfile-dev
    volumes:
      - './services/api:/usr/src/app'
      - './services/api/public:/public'
    ports:
      - 5001:5000
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/pis_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@db:5432/pis_test
      - SECRET_KEY=my_precious
      - JWT_SECRET_KEY=super_secret
      - UPLOAD_FOLDER=/public/uploads
    depends_on:
      - db
    links:
      - db

  db:
    container_name: db
    volumes:
      - './services/db/data:/var/lib/postgresql/data'
    build:
      context: services/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    container_name: nginx
    volumes:
      - './services/api/public:/public'
    build:
      context: services/nginx
      dockerfile: Dockerfile-dev
    restart: always
    ports:
      - 80:80
    depends_on:
      - api
      - client

  client:
    container_name: client
    build:
      context: ./services/client
      dockerfile: Dockerfile-dev
    volumes:
      - './services/client:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '3007:3000'
    environment:
      - NODE_ENV=development
      - REACT_APP_API_SERVICE_URL=${REACT_APP_API_SERVICE_URL}
    depends_on:
      - api
    links:
      - api
